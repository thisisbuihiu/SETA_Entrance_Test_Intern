{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\nconst API_URL = '/api/posts';\n\n//Async thunks for API calls\nexport const fetchPosts = createAsyncThunk('posts/fetchPosts', async (_, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(API_URL);\n    return response.data.data;\n  } catch (error) {\n    var _error$response, _error$response$data;\n    return rejectWithValue(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to fetch posts');\n  }\n});\nexport const fetchPostById = createAsyncThunk('posts/fetchPostById', async (id, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.get(`${API_URL}/${id}`);\n    return response.data.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    return rejectWithValue(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to fetch post');\n  }\n});\nexport const createPost = createAsyncThunk('posts/createPost', async (postData, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.post(API_URL, postData);\n    return response.data.data;\n  } catch (error) {\n    var _error$response3, _error$response3$data;\n    return rejectWithValue(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to create post');\n  }\n});\nexport const updatePost = createAsyncThunk('posts/updatePost', async ({\n  id,\n  postData\n}, {\n  rejectWithValue\n}) => {\n  try {\n    const response = await axios.put(`${API_URL}/${id}`, postData);\n    return response.data.data;\n  } catch (error) {\n    var _error$response4, _error$response4$data;\n    return rejectWithValue(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to update post');\n  }\n});\nexport const deletePost = createAsyncThunk('posts/deletePost', async (id, {\n  rejectWithValue\n}) => {\n  try {\n    await axios.delete(`${API_URL}/${id}`);\n    return id;\n  } catch (error) {\n    var _error$response5, _error$response5$data;\n    return rejectWithValue(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to delete post');\n  }\n});\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    posts: [],\n    currentPost: null,\n    loading: false,\n    error: null\n  },\n  reducers: {\n    clearError: state => {\n      state.error = null;\n    },\n    clearCurrentPost: state => {\n      state.currentPost = null;\n    }\n  },\n  extraReducers: builder => {\n    builder\n    //Fetch posts\n    .addCase(fetchPosts.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchPosts.fulfilled, (state, action) => {\n      state.loading = false;\n      state.posts = action.payload;\n    }).addCase(fetchPosts.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    //Fetch single post\n    .addCase(fetchPostById.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(fetchPostById.fulfilled, (state, action) => {\n      state.loading = false;\n      state.currentPost = action.payload;\n    }).addCase(fetchPostById.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    //Create post\n    .addCase(createPost.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(createPost.fulfilled, (state, action) => {\n      state.loading = false;\n      state.posts.unshift(action.payload);\n    }).addCase(createPost.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Update post\n    .addCase(updatePost.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(updatePost.fulfilled, (state, action) => {\n      state.loading = false;\n      const index = state.posts.findIndex(post => post._id === action.payload._id);\n      if (index !== -1) {\n        state.posts[index] = action.payload;\n      }\n      state.currentPost = action.payload;\n    }).addCase(updatePost.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    })\n\n    // Delete post\n    .addCase(deletePost.pending, state => {\n      state.loading = true;\n      state.error = null;\n    }).addCase(deletePost.fulfilled, (state, action) => {\n      state.loading = false;\n      state.posts = state.posts.filter(post => post._id !== action.payload);\n    }).addCase(deletePost.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    });\n  }\n});\nexport const {\n  clearError,\n  clearCurrentPost\n} = postsSlice.actions;\nexport default postsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_URL","fetchPosts","_","rejectWithValue","response","get","data","error","_error$response","_error$response$data","message","fetchPostById","id","_error$response2","_error$response2$data","createPost","postData","post","_error$response3","_error$response3$data","updatePost","put","_error$response4","_error$response4$data","deletePost","delete","_error$response5","_error$response5$data","postsSlice","name","initialState","posts","currentPost","loading","reducers","clearError","state","clearCurrentPost","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","unshift","index","findIndex","_id","filter","actions","reducer"],"sources":["/Users/buitrunghieu/Desktop/SETA_Entrance_Test_Intern/Task 3/frontend/src/store/postsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst API_URL = '/api/posts';\n\n//Async thunks for API calls\nexport const fetchPosts = createAsyncThunk(\n  'posts/fetchPosts',\n  async (_, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(API_URL);\n      return response.data.data;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || 'Failed to fetch posts');\n    }\n  }\n);\n\nexport const fetchPostById = createAsyncThunk(\n  'posts/fetchPostById',\n  async (id, { rejectWithValue }) => {\n    try {\n      const response = await axios.get(`${API_URL}/${id}`);\n      return response.data.data;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || 'Failed to fetch post');\n    }\n  }\n);\n\nexport const createPost = createAsyncThunk(\n  'posts/createPost',\n  async (postData, { rejectWithValue }) => {\n    try {\n      const response = await axios.post(API_URL, postData);\n      return response.data.data;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || 'Failed to create post');\n    }\n  }\n);\n\nexport const updatePost = createAsyncThunk(\n  'posts/updatePost',\n  async ({ id, postData }, { rejectWithValue }) => {\n    try {\n      const response = await axios.put(`${API_URL}/${id}`, postData);\n      return response.data.data;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || 'Failed to update post');\n    }\n  }\n);\n\nexport const deletePost = createAsyncThunk(\n  'posts/deletePost',\n  async (id, { rejectWithValue }) => {\n    try {\n      await axios.delete(`${API_URL}/${id}`);\n      return id;\n    } catch (error) {\n      return rejectWithValue(error.response?.data?.message || 'Failed to delete post');\n    }\n  }\n);\n\nconst postsSlice = createSlice({\n  name: 'posts',\n  initialState: {\n    posts: [],\n    currentPost: null,\n    loading: false,\n    error: null,\n  },\n  reducers: {\n    clearError: (state) => {\n      state.error = null;\n    },\n    clearCurrentPost: (state) => {\n      state.currentPost = null;\n    },\n  },\n  extraReducers: (builder) => {\n    builder\n      //Fetch posts\n      .addCase(fetchPosts.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchPosts.fulfilled, (state, action) => {\n        state.loading = false;\n        state.posts = action.payload;\n      })\n      .addCase(fetchPosts.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      })\n      \n      //Fetch single post\n      .addCase(fetchPostById.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchPostById.fulfilled, (state, action) => {\n        state.loading = false;\n        state.currentPost = action.payload;\n      })\n      .addCase(fetchPostById.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      })\n      \n      //Create post\n      .addCase(createPost.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(createPost.fulfilled, (state, action) => {\n        state.loading = false;\n        state.posts.unshift(action.payload);\n      })\n      .addCase(createPost.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      })\n      \n      // Update post\n      .addCase(updatePost.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(updatePost.fulfilled, (state, action) => {\n        state.loading = false;\n        const index = state.posts.findIndex(post => post._id === action.payload._id);\n        if (index !== -1) {\n          state.posts[index] = action.payload;\n        }\n        state.currentPost = action.payload;\n      })\n      .addCase(updatePost.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      })\n      \n      // Delete post\n      .addCase(deletePost.pending, (state) => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(deletePost.fulfilled, (state, action) => {\n        state.loading = false;\n        state.posts = state.posts.filter(post => post._id !== action.payload);\n      })\n      .addCase(deletePost.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.payload;\n      });\n  },\n});\n\nexport const { clearError, clearCurrentPost } = postsSlice.actions;\nexport default postsSlice.reducer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}